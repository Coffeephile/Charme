<?php

/*
PHP/OpenSSL Compatibility
Hi there, 

I am trying to check the signature generated by 
http://kjur.github.io/jsrsasign/sample-rsasign.html
in PHP.
openssl_verify should return 1 if the signature is correct. It returns 0 however, which means the signature is invalid..
Here is my code:

```
$pubkey = "
-----BEGIN CERTIFICATE-----
MIIBvTCCASYCCQD55fNzc0WF7TANBgkqhkiG9w0BAQUFADAjMQswCQYDVQQGEwJK
UDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwHhcNMTAwNTI4MDIwODUxWhcNMjAwNTI1
MDIwODUxWjAjMQswCQYDVQQGEwJKUDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwgZ8w
DQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANGEYXtfgDRlWUSDn3haY4NVVQiKI9Cz
Thoua9+DxJuiseyzmBBe7Roh1RPqdvmtOHmEPbJ+kXZYhbozzPRbFGHCJyBfCLzQ
fVos9/qUQ88u83b0SFA2MGmQWQAlRtLy66EkR4rDRwTj2DzR4EEXgEKpIvo8VBs/
3+sHLF3ESgAhAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAEZ6mXFFq3AzfaqWHmCy1
ARjlauYAa8ZmUFnLm0emg9dkVBJ63aEqARhtok6bDQDzSJxiLpCEF6G4b/Nv/M/M
LyhP+OoOTmETMegAVQMq71choVJyOFE5BtQa6M/lCHEOya5QUfoRF2HF9EjRF44K
3OK+u3ivTSj3zwjtpudY5Xo=
-----END CERTIFICATE-----
";

var_dump(openssl_verify("aaa", hex2bin("6f7df91d8f973a0619d525c319337741130b77b21f9667dc7d1d74853b644cbe
5e6b0e84aacc2faee883d43affb811fc653b67c38203d4f206d1b838c4714b6b
2cf17cd621303c21bac96090df3883e58784a0576e501c10cdefb12b6bf887e5
48f6b07b09ae80d8416151d7dab7066d645e2eee57ac5f7af2a70ee0724c8e47"), openssl_pkey_get_public($pubkey), "sha1WithRSAEncryption"));
```

Best regards,

Manuel
*/
require_once '../lib/App/ClassLoader/UniversalClassLoader.php';
use Symfony\Component\ClassLoader\UniversalClassLoader;

// Load Symfony Class Loader
$loader = new UniversalClassLoader();
$loader->registerNamespaces(array('App' => '../lib'));
$loader->register();

include("../log.php");


$pubkey = <<<EOT
-----BEGIN CERTIFICATE-----
MIIBvTCCASYCCQD55fNzc0WF7TANBgkqhkiG9w0BAQUFADAjMQswCQYDVQQGEwJK
UDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwHhcNMTAwNTI4MDIwODUxWhcNMjAwNTI1
MDIwODUxWjAjMQswCQYDVQQGEwJKUDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwgZ8w
DQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANGEYXtfgDRlWUSDn3haY4NVVQiKI9Cz
Thoua9+DxJuiseyzmBBe7Roh1RPqdvmtOHmEPbJ+kXZYhbozzPRbFGHCJyBfCLzQ
fVos9/qUQ88u83b0SFA2MGmQWQAlRtLy66EkR4rDRwTj2DzR4EEXgEKpIvo8VBs/
3+sHLF3ESgAhAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAEZ6mXFFq3AzfaqWHmCy1
ARjlauYAa8ZmUFnLm0emg9dkVBJ63aEqARhtok6bDQDzSJxiLpCEF6G4b/Nv/M/M
LyhP+OoOTmETMegAVQMq71choVJyOFE5BtQa6M/lCHEOya5QUfoRF2HF9EjRF44K
3OK+u3ivTSj3zwjtpudY5Xo=
-----END CERTIFICATE-----
EOT;

var_dump(openssl_verify("aaa", hex2bin("6f7df91d8f973a0619d525c319337741130b77b21f9667dc7d1d74853b644cbe
5e6b0e84aacc2faee883d43affb811fc653b67c38203d4f206d1b838c4714b6b
2cf17cd621303c21bac96090df3883e58784a0576e501c10cdefb12b6bf887e5
48f6b07b09ae80d8416151d7dab7066d645e2eee57ac5f7af2a70ee0724c8e47"), openssl_pkey_get_public($pubkey), "sha1WithRSAEncryption"));





echo "<h1>Charme Test Suite</h1>";

// Verify Requests

$request1 = array();

if (\App\Security\RequestVerificator::Verify($request1))
	echo "OK";
else
	echo "FAIL";


echo "<h3>Server Key Directory</h3>";
echo "invalid key revision return:".(\App\Security\PublicKeys::tryToAdd("ms@charme.local",2213123))."<br>";
echo "valid key revision return:".(\App\Security\PublicKeys::tryToAdd("ms@charme.local",2));

// Public key of a user stored on server
$n = "7e470001e6ec9eb772fccc78617b8930ced9dc05f27eb678098ea9fe1584740c9a08761bede311e9191e42e004b66db6ac22c2f7f01520e1b4e865675791e3807ed85b378b8df0bcc7525c5608148625e3563d4ed27ba39ea01aa5b3df9c7a72bde25df717864e123718e021c229e8ffe8ce3652598d12d4d48aa07bb0b8d727cb791b366ab9f84d6fa9e5d65a07309beb63ad501dd312aacac8a98e5b7e8f7b6a140787733e24e4e125af6baffaa2c4bd945721878f6c0fe352d12aba8d88bd1ee59e04fcdad519b52c3ff0b9cf24a2e78164a8bfd15e021c7331e2a73dc54c6e02ac9ed168bde03649395a4996bc60bfbaf061924392d04ae2c62001d1cd37";
$e = "10001";

$json = '{"object":{"test":"esr"},"signature":{"keyRevision":2,"hashvalue":"41a09f885a1b3fcf9802d0f495c5cf2ab351f6b4613d9481d4537007f620aab32ffbd526a14664b333dabe7a20204db6aadb90358dcbc6183d449eb96981370b727ea7a724280574d01e69d80f029b341fba4d4061ad1b5e347b63cbbaf340ff81131d88d8211d5f5579f73c46d0c4ace2cf9e1129baee3596a43c2398c4d9916bcfb309d17b86f8caa7913d2e6b53b740d4ff5badf0e99fdb581bdda3e64633b9b75e51d47d49f07d56a76a38113539d34f400956d40ced08caa7103b9751da51f8310c4b9ca20af4041e3b6f454b41c1b16d72e3d105e73f963786befdd79c1a949b4b82c26f868885527de8df5d0540c85ef42fb36ef81735d6f8e3c1b0db"}}';
echo "<br><br>";

$jsonArray = json_decode($json, true);


print_r($jsonArray);

\App\Security\PublicKeys::checkX509($jsonArray, $n, $e);



echo "<br>---------------------------------------------------------------------------------------------------------------------------<br>";
//data you want to sign

$testkey2 = "
-----BEGIN CERTIFICATE-----
MIIBvTCCASYCCQD55fNzc0WF7TANBgkqhkiG9w0BAQUFADAjMQswCQYDVQQGEwJK
UDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwHhcNMTAwNTI4MDIwODUxWhcNMjAwNTI1
MDIwODUxWjAjMQswCQYDVQQGEwJKUDEUMBIGA1UEChMLMDAtVEVTVC1SU0EwgZ8w
DQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANGEYXtfgDRlWUSDn3haY4NVVQiKI9Cz
Thoua9+DxJuiseyzmBBe7Roh1RPqdvmtOHmEPbJ+kXZYhbozzPRbFGHCJyBfCLzQ
fVos9/qUQ88u83b0SFA2MGmQWQAlRtLy66EkR4rDRwTj2DzR4EEXgEKpIvo8VBs/
3+sHLF3ESgAhAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAEZ6mXFFq3AzfaqWHmCy1
ARjlauYAa8ZmUFnLm0emg9dkVBJ63aEqARhtok6bDQDzSJxiLpCEF6G4b/Nv/M/M
LyhP+OoOTmETMegAVQMq71choVJyOFE5BtQa6M/lCHEOya5QUfoRF2HF9EjRF44K
3OK+u3ivTSj3zwjtpudY5Xo=
-----END CERTIFICATE-----

"; // If ----BEGIN PUBLIC KEY ---- then return val changes


echo "VERIFY TEST:::::<br>";
 var_dump(openssl_verify("aaa", hex2bin("6f7df91d8f973a0619d525c319337741130b77b21f9667dc7d1d74853b644cbe
5e6b0e84aacc2faee883d43affb811fc653b67c38203d4f206d1b838c4714b6b
2cf17cd621303c21bac96090df3883e58784a0576e501c10cdefb12b6bf887e5
48f6b07b09ae80d8416151d7dab7066d645e2eee57ac5f7af2a70ee0724c8e47"), openssl_pkey_get_public($testkey2), "sha1"));




$data = 'aaa';

//create new private and public key
$new_key_pair = openssl_pkey_new(array(
    "private_key_bits" => 2048,
    "private_key_type" => OPENSSL_KEYTYPE_RSA,
));
openssl_pkey_export($new_key_pair, $private_key_pem);

$details = openssl_pkey_get_details($new_key_pair);
$public_key_pem = $details['key'];

echo "<br><br>php gernerated pubkey: <br>".$public_key_pem;
//create signature
echo openssl_sign($data, $signature, $private_key_pem, "sha256WithRSAEncryption");
echo "<br><br><br>SIGNATURE BY PHP:<br>";
echo bin2hex($signature);
echo "<br>END SIGNATURE<br><br>";
//save for later
file_put_contents('private_key.pem', $private_key_pem);
file_put_contents('public_key.pem', $public_key_pem);
file_put_contents('signature.dat', $signature);

//verify signature
$r = openssl_verify($data, $signature, $public_key_pem, "sha256WithRSAEncryption");
echo "VERIFY: ";
var_dump($r);




?>